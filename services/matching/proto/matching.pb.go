// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/matching.proto

package matching

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MatchClientsRequest is used to request matching client locations.
type MatchClientsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius        float64                `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"` // The search radius in meters.
	Limit         uint32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`    // The maximum number of clients to return.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchClientsRequest) Reset() {
	*x = MatchClientsRequest{}
	mi := &file_proto_matching_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchClientsRequest) ProtoMessage() {}

func (x *MatchClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matching_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchClientsRequest.ProtoReflect.Descriptor instead.
func (*MatchClientsRequest) Descriptor() ([]byte, []int) {
	return file_proto_matching_proto_rawDescGZIP(), []int{0}
}

func (x *MatchClientsRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *MatchClientsRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *MatchClientsRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *MatchClientsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ClientLocation represents a client's location with userId, latitude, longitude, and a geohash.
type ClientLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // Mapped from geo service's DriverId to this service's userId.
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Geohash       uint64                 `protobuf:"varint,4,opt,name=geohash,proto3" json:"geohash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientLocation) Reset() {
	*x = ClientLocation{}
	mi := &file_proto_matching_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLocation) ProtoMessage() {}

func (x *ClientLocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matching_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLocation.ProtoReflect.Descriptor instead.
func (*ClientLocation) Descriptor() ([]byte, []int) {
	return file_proto_matching_proto_rawDescGZIP(), []int{1}
}

func (x *ClientLocation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClientLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ClientLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ClientLocation) GetGeohash() uint64 {
	if x != nil {
		return x.Geohash
	}
	return 0
}

// MatchClientsResponse contains a list of client locations.
type MatchClientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clients       []*ClientLocation      `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchClientsResponse) Reset() {
	*x = MatchClientsResponse{}
	mi := &file_proto_matching_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchClientsResponse) ProtoMessage() {}

func (x *MatchClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matching_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchClientsResponse.ProtoReflect.Descriptor instead.
func (*MatchClientsResponse) Descriptor() ([]byte, []int) {
	return file_proto_matching_proto_rawDescGZIP(), []int{2}
}

func (x *MatchClientsResponse) GetClients() []*ClientLocation {
	if x != nil {
		return x.Clients
	}
	return nil
}

var File_proto_matching_proto protoreflect.FileDescriptor

const file_proto_matching_proto_rawDesc = "" +
	"\n" +
	"\x14proto/matching.proto\x12\bmatching\"}\n" +
	"\x13MatchClientsRequest\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\"|\n" +
	"\x0eClientLocation\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x18\n" +
	"\ageohash\x18\x04 \x01(\x04R\ageohash\"J\n" +
	"\x14MatchClientsResponse\x122\n" +
	"\aclients\x18\x01 \x03(\v2\x18.matching.ClientLocationR\aclients2`\n" +
	"\x0fMatchingService\x12M\n" +
	"\fMatchClients\x12\x1d.matching.MatchClientsRequest\x1a\x1e.matching.MatchClientsResponseB!Z\x1fmatching-service/proto;matchingb\x06proto3"

var (
	file_proto_matching_proto_rawDescOnce sync.Once
	file_proto_matching_proto_rawDescData []byte
)

func file_proto_matching_proto_rawDescGZIP() []byte {
	file_proto_matching_proto_rawDescOnce.Do(func() {
		file_proto_matching_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_matching_proto_rawDesc), len(file_proto_matching_proto_rawDesc)))
	})
	return file_proto_matching_proto_rawDescData
}

var file_proto_matching_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_matching_proto_goTypes = []any{
	(*MatchClientsRequest)(nil),  // 0: matching.MatchClientsRequest
	(*ClientLocation)(nil),       // 1: matching.ClientLocation
	(*MatchClientsResponse)(nil), // 2: matching.MatchClientsResponse
}
var file_proto_matching_proto_depIdxs = []int32{
	1, // 0: matching.MatchClientsResponse.clients:type_name -> matching.ClientLocation
	0, // 1: matching.MatchingService.MatchClients:input_type -> matching.MatchClientsRequest
	2, // 2: matching.MatchingService.MatchClients:output_type -> matching.MatchClientsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_matching_proto_init() }
func file_proto_matching_proto_init() {
	if File_proto_matching_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_matching_proto_rawDesc), len(file_proto_matching_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_matching_proto_goTypes,
		DependencyIndexes: file_proto_matching_proto_depIdxs,
		MessageInfos:      file_proto_matching_proto_msgTypes,
	}.Build()
	File_proto_matching_proto = out.File
	file_proto_matching_proto_goTypes = nil
	file_proto_matching_proto_depIdxs = nil
}
