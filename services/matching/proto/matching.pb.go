// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: matching.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MatchClientsRequest is used to request matching client locations.
type MatchDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius        float64                `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"` // The search radius in meters.
	Limit         uint32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`    // The maximum number of clients to return.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchDriversRequest) Reset() {
	*x = MatchDriversRequest{}
	mi := &file_matching_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDriversRequest) ProtoMessage() {}

func (x *MatchDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDriversRequest.ProtoReflect.Descriptor instead.
func (*MatchDriversRequest) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{0}
}

func (x *MatchDriversRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *MatchDriversRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *MatchDriversRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *MatchDriversRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ClientLocation represents a client's location with userId, latitude, longitude, and a geohash.
type DriverLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driverId,proto3" json:"driverId,omitempty"` // Mapped from geo service's DriverId to this service's userId.
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Geohash       uint64                 `protobuf:"varint,4,opt,name=geohash,proto3" json:"geohash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverLocation) Reset() {
	*x = DriverLocation{}
	mi := &file_matching_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocation) ProtoMessage() {}

func (x *DriverLocation) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocation.ProtoReflect.Descriptor instead.
func (*DriverLocation) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{1}
}

func (x *DriverLocation) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DriverLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DriverLocation) GetGeohash() uint64 {
	if x != nil {
		return x.Geohash
	}
	return 0
}

// MatchClientsResponse contains a list of client locations.
type MatchDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       []*DriverLocation      `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchDriversResponse) Reset() {
	*x = MatchDriversResponse{}
	mi := &file_matching_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDriversResponse) ProtoMessage() {}

func (x *MatchDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDriversResponse.ProtoReflect.Descriptor instead.
func (*MatchDriversResponse) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{2}
}

func (x *MatchDriversResponse) GetDrivers() []*DriverLocation {
	if x != nil {
		return x.Drivers
	}
	return nil
}

// UpdateUserStatusRequest contains fields to update a user's matching status.
type UpdateUserStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driverId,proto3" json:"driverId,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserStatusRequest) Reset() {
	*x = UpdateUserStatusRequest{}
	mi := &file_matching_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusRequest) ProtoMessage() {}

func (x *UpdateUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserStatusRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateUserStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// UpdateUserStatusResponse provides a confirmation response for updating user status.
type UpdateUserStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserStatusResponse) Reset() {
	*x = UpdateUserStatusResponse{}
	mi := &file_matching_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusResponse) ProtoMessage() {}

func (x *UpdateUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetUserMatchingStatusRequest is used to request a user's matching status.
type GetUserMatchingStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserMatchingStatusRequest) Reset() {
	*x = GetUserMatchingStatusRequest{}
	mi := &file_matching_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserMatchingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMatchingStatusRequest) ProtoMessage() {}

func (x *GetUserMatchingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMatchingStatusRequest.ProtoReflect.Descriptor instead.
func (*GetUserMatchingStatusRequest) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserMatchingStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// GetUserMatchingStatusResponse returns the matching status information for a user.
type GetUserMatchingStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driverId,proto3" json:"driverId,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ClosedAt      string                 `protobuf:"bytes,5,opt,name=closedAt,proto3" json:"closedAt,omitempty"` // Optional: can be empty if not applicable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserMatchingStatusResponse) Reset() {
	*x = GetUserMatchingStatusResponse{}
	mi := &file_matching_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserMatchingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMatchingStatusResponse) ProtoMessage() {}

func (x *GetUserMatchingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMatchingStatusResponse.ProtoReflect.Descriptor instead.
func (*GetUserMatchingStatusResponse) Descriptor() ([]byte, []int) {
	return file_matching_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserMatchingStatusResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserMatchingStatusResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *GetUserMatchingStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetUserMatchingStatusResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetUserMatchingStatusResponse) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

var File_matching_proto protoreflect.FileDescriptor

const file_matching_proto_rawDesc = "" +
	"\n" +
	"\x0ematching.proto\x12\bmatching\"}\n" +
	"\x13MatchDriversRequest\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x01R\x06radius\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\"\x80\x01\n" +
	"\x0eDriverLocation\x12\x1a\n" +
	"\bdriverId\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x18\n" +
	"\ageohash\x18\x04 \x01(\x04R\ageohash\"J\n" +
	"\x14MatchDriversResponse\x122\n" +
	"\adrivers\x18\x01 \x03(\v2\x18.matching.DriverLocationR\adrivers\"e\n" +
	"\x17UpdateUserStatusRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bdriverId\x18\x02 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"4\n" +
	"\x18UpdateUserStatusResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"6\n" +
	"\x1cGetUserMatchingStatusRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xa5\x01\n" +
	"\x1dGetUserMatchingStatusResponse\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bdriverId\x18\x02 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1c\n" +
	"\tcreatedAt\x18\x04 \x01(\tR\tcreatedAt\x12\x1a\n" +
	"\bclosedAt\x18\x05 \x01(\tR\bclosedAt2\xa5\x02\n" +
	"\x0fMatchingService\x12M\n" +
	"\fMatchClients\x12\x1d.matching.MatchDriversRequest\x1a\x1e.matching.MatchDriversResponse\x12Y\n" +
	"\x10UpdateUserStatus\x12!.matching.UpdateUserStatusRequest\x1a\".matching.UpdateUserStatusResponse\x12h\n" +
	"\x15GetUserMatchingStatus\x12&.matching.GetUserMatchingStatusRequest\x1a'.matching.GetUserMatchingStatusResponseB!Z\x1fmatching-service/proto;matchingb\x06proto3"

var (
	file_matching_proto_rawDescOnce sync.Once
	file_matching_proto_rawDescData []byte
)

func file_matching_proto_rawDescGZIP() []byte {
	file_matching_proto_rawDescOnce.Do(func() {
		file_matching_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_matching_proto_rawDesc), len(file_matching_proto_rawDesc)))
	})
	return file_matching_proto_rawDescData
}

var file_matching_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_matching_proto_goTypes = []any{
	(*MatchDriversRequest)(nil),           // 0: matching.MatchDriversRequest
	(*DriverLocation)(nil),                // 1: matching.DriverLocation
	(*MatchDriversResponse)(nil),          // 2: matching.MatchDriversResponse
	(*UpdateUserStatusRequest)(nil),       // 3: matching.UpdateUserStatusRequest
	(*UpdateUserStatusResponse)(nil),      // 4: matching.UpdateUserStatusResponse
	(*GetUserMatchingStatusRequest)(nil),  // 5: matching.GetUserMatchingStatusRequest
	(*GetUserMatchingStatusResponse)(nil), // 6: matching.GetUserMatchingStatusResponse
}
var file_matching_proto_depIdxs = []int32{
	1, // 0: matching.MatchDriversResponse.drivers:type_name -> matching.DriverLocation
	0, // 1: matching.MatchingService.MatchClients:input_type -> matching.MatchDriversRequest
	3, // 2: matching.MatchingService.UpdateUserStatus:input_type -> matching.UpdateUserStatusRequest
	5, // 3: matching.MatchingService.GetUserMatchingStatus:input_type -> matching.GetUserMatchingStatusRequest
	2, // 4: matching.MatchingService.MatchClients:output_type -> matching.MatchDriversResponse
	4, // 5: matching.MatchingService.UpdateUserStatus:output_type -> matching.UpdateUserStatusResponse
	6, // 6: matching.MatchingService.GetUserMatchingStatus:output_type -> matching.GetUserMatchingStatusResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_matching_proto_init() }
func file_matching_proto_init() {
	if File_matching_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_matching_proto_rawDesc), len(file_matching_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matching_proto_goTypes,
		DependencyIndexes: file_matching_proto_depIdxs,
		MessageInfos:      file_matching_proto_msgTypes,
	}.Build()
	File_matching_proto = out.File
	file_matching_proto_goTypes = nil
	file_matching_proto_depIdxs = nil
}
