// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: service.proto

package ride

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOrderRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PickupLatitude   float64                `protobuf:"fixed64,2,opt,name=pickup_latitude,json=pickupLatitude,proto3" json:"pickup_latitude,omitempty"`
	PickupLongitude  float64                `protobuf:"fixed64,3,opt,name=pickup_longitude,json=pickupLongitude,proto3" json:"pickup_longitude,omitempty"`
	DropoffLatitude  float64                `protobuf:"fixed64,4,opt,name=dropoff_latitude,json=dropoffLatitude,proto3" json:"dropoff_latitude,omitempty"`
	DropoffLongitude float64                `protobuf:"fixed64,5,opt,name=dropoff_longitude,json=dropoffLongitude,proto3" json:"dropoff_longitude,omitempty"`
	DriverId         string                 `protobuf:"bytes,6,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"` // optional: pre-selected driver
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateOrderRequest) GetPickupLatitude() float64 {
	if x != nil {
		return x.PickupLatitude
	}
	return 0
}

func (x *CreateOrderRequest) GetPickupLongitude() float64 {
	if x != nil {
		return x.PickupLongitude
	}
	return 0
}

func (x *CreateOrderRequest) GetDropoffLatitude() float64 {
	if x != nil {
		return x.DropoffLatitude
	}
	return 0
}

func (x *CreateOrderRequest) GetDropoffLongitude() float64 {
	if x != nil {
		return x.DropoffLongitude
	}
	return 0
}

func (x *CreateOrderRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateOrderResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CreateOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateDriverLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverLocationRequest) Reset() {
	*x = UpdateDriverLocationRequest{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationRequest) ProtoMessage() {}

func (x *UpdateDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateDriverLocationRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateDriverLocationResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Message string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Include driver_id so clients know which driver was updated
	DriverId      string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverLocationResponse) Reset() {
	*x = UpdateDriverLocationResponse{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationResponse) ProtoMessage() {}

func (x *UpdateDriverLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDriverLocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDriverLocationResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x04ride\"\xf6\x01\n" +
	"\x12CreateOrderRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fpickup_latitude\x18\x02 \x01(\x01R\x0epickupLatitude\x12)\n" +
	"\x10pickup_longitude\x18\x03 \x01(\x01R\x0fpickupLongitude\x12)\n" +
	"\x10dropoff_latitude\x18\x04 \x01(\x01R\x0fdropoffLatitude\x12+\n" +
	"\x11dropoff_longitude\x18\x05 \x01(\x01R\x10dropoffLongitude\x12\x1b\n" +
	"\tdriver_id\x18\x06 \x01(\tR\bdriverId\"e\n" +
	"\x13CreateOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"t\n" +
	"\x1bUpdateDriverLocationRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\"U\n" +
	"\x1cUpdateDriverLocationResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId2\xb0\x01\n" +
	"\vRideService\x12B\n" +
	"\vCreateOrder\x12\x18.ride.CreateOrderRequest\x1a\x19.ride.CreateOrderResponse\x12]\n" +
	"\x14UpdateDriverLocation\x12!.ride.UpdateDriverLocationRequest\x1a\".ride.UpdateDriverLocationResponseB3Z1github.com/your-repo/your-project/proto/ride;rideb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_service_proto_goTypes = []any{
	(*CreateOrderRequest)(nil),           // 0: ride.CreateOrderRequest
	(*CreateOrderResponse)(nil),          // 1: ride.CreateOrderResponse
	(*UpdateDriverLocationRequest)(nil),  // 2: ride.UpdateDriverLocationRequest
	(*UpdateDriverLocationResponse)(nil), // 3: ride.UpdateDriverLocationResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: ride.RideService.CreateOrder:input_type -> ride.CreateOrderRequest
	2, // 1: ride.RideService.UpdateDriverLocation:input_type -> ride.UpdateDriverLocationRequest
	1, // 2: ride.RideService.CreateOrder:output_type -> ride.CreateOrderResponse
	3, // 3: ride.RideService.UpdateDriverLocation:output_type -> ride.UpdateDriverLocationResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
